<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vvs.shop.product">

	<insert id="doInsertOptions" parameterType="OptionsVO">
		insert into OPTIONS (
			color,
			sizes,
			product_num,
			seq,
			qty
		) values (
			#{color},
			#{sizes},
			#{productNum},
			OPTIONS_SEQ.nextVal,
			#{qty}
		)
		
	</insert>

	<update id="doUpdateDetail" parameterType="ProductVO">
		UPDATE product_detail
		SET
		    semi_info = #{semiInfo},
		    main_info = #{mainInfo}
		WHERE
        product_num = #{productNum}
	</update>

	<insert id="doInsertDetail" parameterType="ProductDetailVO">
		insert into product_detail (
			product_num,
			semi_info,
			main_info
		) values (
			#{productNum},
			#{semiInfo},
			#{mainInfo}
		)
	</insert>

	<insert id="doInsert" parameterType="ProductVO">
		INSERT INTO product (
		    product_num,
		    category_num,
		    product_name,
		    discount_rate,
		    discount,
		    reg_dt,
		    price,
		    discount_price
		) VALUES (
		    PRODUCT_NUM_SEQ.nextVal,
		    #{categoryNum},
		    #{productName},
		    #{discountRate},
		    #{discount},
		    SYSDATE,
		    #{price},
		    #{discountPrice}
		)
		<selectKey keyProperty="productNum" resultType="Integer" order="AFTER">
			SELECT PRODUCT_NUM_SEQ.currval FROM dual
		</selectKey>
	</insert>
	
	<delete id="doDelete" parameterType="ProductVO">
	DELETE FROM product
	WHERE
	        product_num = #{productNum}
	</delete>
	
	<select id="doSelectListOptions" parameterType="OptionsVO" resultType="OptionsVO">
	Select *
	From Options
	Where product_num = #{productNum} 
	</select>
	
	<update id="doUpdate" parameterType="ProductVO">
	UPDATE product
	SET
	    product_name = #{productName},
	    price = #{price} 
	WHERE
        product_num = #{productNum}
	</update>
	
	<select id="doSelectOne" parameterType="ProductVO" resultType="ProductVO">
	select *
	from product p, product_detail d
	where p.product_num = #{productNum} and
	p.product_num = d.product_num
	</select>
	
	<select id="doSelectList" parameterType="ProductVO" resultType="ProductVO">
	SELECT
	    product_num,
	    category_num,
	    product_name,
	    discount_rate,
	    discount,
	    reg_dt,
	    price,
	    discount_price
	FROM
	    product
	</select>
	
	<select id="doSelectListWithPagingCount" parameterType="SearchVO" resultType="int">
		Select COUNT(*)
		From product p , product_detail d
		Where p.product_num = d.product_num(+)
		<trim prefix="And (" suffix=")" prefixOverrides="And">
			<trim prefix="And">
				<if test="searchWord != null">
						product_name like '%' || #{searchWord} || '%'
				</if>
				<if test="minPrice != 0">
						And p.price >= #{minPrice}
				</if>
				<if test="maxPrice != 0">
						And p.price <![CDATA[<=]]> #{maxPrice}
				</if>
				<if test="div != 0">
						And p.category_num = #{div}
				</if>
			</trim>
		</trim>
		Order By reg_dt
	</select>
	
	<select id="doSelectListWithPaging" parameterType="SearchVO" resultType="ProductVO">
	Select B.*
	From
		(Select Rownum as RNUM, A.*
		From
			(Select p.product_num, p.category_num, p.product_name, p.discount_rate, p.price, p.reg_dt, d.semi_info
			From product p , product_detail d
			Where p.product_num = d.product_num(+)
			<trim prefix="And (" suffix=")" prefixOverrides="And">
				<trim prefix="And">
					<if test="searchWord != null">
							product_name like '%' || #{searchWord} || '%'
					</if>
					<if test="minPrice != 0">
							And p.price >= #{minPrice}
					</if>
					<if test="maxPrice != 0">
							And p.price <![CDATA[<=]]> #{maxPrice}
					</if>
					<if test="div != 0">
							And p.category_num = #{div}
					</if>
				</trim>
			</trim>
			Order By reg_dt) A
		Where Rownum <![CDATA[<=]]> (#{pageNum} * #{pageSize}))B
	Where (1+(#{pageNum} - 1) * (#{pageSize}) ) <![CDATA[<=]]> RNUM
	</select>
	
</mapper>